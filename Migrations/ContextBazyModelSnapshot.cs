// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using drinki.BazaDanych;

#nullable disable

namespace drinki.Migrations
{
    [DbContext(typeof(ContextBazy))]
    partial class ContextBazyModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("drinki.Models.Drink", b =>
                {
                    b.Property<int>("DrinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Cena")
                        .HasColumnType("TEXT");

                    b.Property<int>("KategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DrinkId");

                    b.HasIndex("KategoriaId");

                    b.ToTable("Drinki");
                });

            modelBuilder.Entity("drinki.Models.Kategoria", b =>
                {
                    b.Property<int>("KategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("KategoriaId");

                    b.ToTable("Kategorie");
                });

            modelBuilder.Entity("drinki.Models.Ocena", b =>
                {
                    b.Property<int>("OcenaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DrinkId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Komentarz")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Wartosc")
                        .HasColumnType("INTEGER");

                    b.HasKey("OcenaId");

                    b.HasIndex("DrinkId");

                    b.ToTable("Oceny");
                });

            modelBuilder.Entity("drinki.Models.Skladnik", b =>
                {
                    b.Property<int>("SkladnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DrinkId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SkladnikId");

                    b.HasIndex("DrinkId");

                    b.ToTable("Skladniki");
                });

            modelBuilder.Entity("drinki.Models.Drink", b =>
                {
                    b.HasOne("drinki.Models.Kategoria", "Kategoria")
                        .WithMany("Drinki")
                        .HasForeignKey("KategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategoria");
                });

            modelBuilder.Entity("drinki.Models.Ocena", b =>
                {
                    b.HasOne("drinki.Models.Drink", "Drink")
                        .WithMany()
                        .HasForeignKey("DrinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drink");
                });

            modelBuilder.Entity("drinki.Models.Skladnik", b =>
                {
                    b.HasOne("drinki.Models.Drink", "Drink")
                        .WithMany()
                        .HasForeignKey("DrinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drink");
                });

            modelBuilder.Entity("drinki.Models.Kategoria", b =>
                {
                    b.Navigation("Drinki");
                });
#pragma warning restore 612, 618
        }
    }
}
